%%对ng的参数进行相应的处理
%对整个文件夹下每个被试进行循环
for i=2:13
    %任务数量
    path=['C:\Users\guohu\Desktop\xipi\allocation data\S00' num2str(i) '\ng\' '*.set'];
    File=dir(path);
    k=length(File);
    %对每个任务进行处理
    for j=2:k
    filename=['C:\Users\guohu\Desktop\xipi\allocation data\S00' num2str(i) '\ng\' 'task_' num2str(j) '.set'];
    eeg=pop_loadset(filename);
    %if isempty(eeg.data)
    %break;
    %end
    %%进行xipi操作
    %导入数据
    XiPi = xp_importdata(eeg);
    %计算频谱，默认参数以及通道值
    if eeg.xmax>30
        t=30;
    else
        t=eeg.xmax;
    end
    XiPi = xp_calculateSpec(XiPi,[0 t],50,'select_chan',(1:25));
    %将频谱分成xipi成分
    XiPi = xp_separateSepc(XiPi);
    %将xi成分和pi成分参数化
    XiPi = xp_parameterize(XiPi);

    %将xi的参数存为一个数组
    numxi=[];
    %将pi的参数存为一个数组
    numpi=[];
    for n=1:25
    %对xi参数进行存储为一个数组的具体操作    
    xispectraname=['XiPi.parameters.xi_paras.spectra_' num2str(n)];
    numxi(1,n)=eval(xispectraname).a; 
    numxi(2,n)=eval(xispectraname).b; 

    %将pi的参数存为一个数组的具体操作
    p=['spectra_' num2str(n)];
    %提取每个pi中spectra_n的结构体到v
    v=getfield(XiPi.parameters.pi_paras,p);
    %提取每个结构体v中有多少元素
    l=length(unique(fieldnames(v)));
    for m=1:l
        pispectraname=['XiPi.parameters.pi_paras.spectra_' num2str(n) '.peak_' num2str(m)];
        numpi(1,n,m)=eval(pispectraname).a1;
        numpi(2,n,m)=eval(pispectraname).b1;
        numpi(3,n,m)=eval(pispectraname).c1;
    end
    end

    %%将xipi参数保存到对应文件中
    %xi参数
    path1=['C:\Users\guohu\Desktop\xipi\xi\ng\S00' num2str(i) '\task_' num2str(j)];
    filename=('numxi.mat');
    save([path1,filename],"numxi");
    %pi参数
    path2=['C:\Users\guohu\Desktop\xipi\pi\ng\S00' num2str(i) '\task_' num2str(j)];
    filename=('numpi.mat');
    save([path2,filename],"numpi");
    end
end

%%对fg的参数进行相应的处理
%对整个文件夹下每个被试进行循环
for i=2:13
    %任务数量
    path=['C:\Users\guohu\Desktop\xipi\allocation data\S00' num2str(i) '\fg\' '*.set'];
    File=dir(path);
    k=length(File);
    %对每个任务进行处理
    for j=1:k
    filename=['C:\Users\guohu\Desktop\xipi\allocation data\S00' num2str(i) '\fg\' 'task_' num2str(j) '.set'];
    eeg=pop_loadset(filename);
    %eeg.data为空值时直接跳出
    if isempty(eeg.data)
        break;
    end
    %%进行xipi操作
    %导入数据
    XiPi = xp_importdata(eeg);
    %计算频谱，默认参数以及通道值
    if eeg.xmax>30
        t=30;
    else
        t=eeg.xmax;
    end
    XiPi = xp_calculateSpec(XiPi,[0 t],50,'select_chan',(1:25));
    %将频谱分成xipi成分
    XiPi = xp_separateSepc(XiPi);
    %将xi成分和pi成分参数化
    XiPi = xp_parameterize(XiPi);

    %将xi的参数存为一个数组
    numxi=[];
    %将pi的参数存为一个数组
    numpi=[];
    for n=1:25
    %对xi参数进行存储为一个数组的具体操作    
    xispectraname=['XiPi.parameters.xi_paras.spectra_' num2str(n)];
    numxi(1,n)=eval(xispectraname).a; 
    numxi(2,n)=eval(xispectraname).b; 

    %将pi的参数存为一个数组的具体操作
    p=['spectra_' num2str(n)];
    %提取每个pi中spectra_n的结构体到v
    v=getfield(XiPi.parameters.pi_paras,p);
    %提取每个结构体v中有多少元素
    l=length(unique(fieldnames(v)));
    for m=1:l
        pispectraname=['XiPi.parameters.pi_paras.spectra_' num2str(n) '.peak_' num2str(m)];
        numpi(1,n,m)=eval(pispectraname).a1;
        numpi(2,n,m)=eval(pispectraname).b1;
        numpi(3,n,m)=eval(pispectraname).c1;
    end
    end

    %%将xipi参数保存到对应文件中
    %xi参数
    path3=['C:\Users\guohu\Desktop\xipi\xi\fg\S00' num2str(i) '\task_' num2str(j)];
    filename=('numxi.mat');
    save([path3,filename],"numxi");
    %pi参数
    path4=['C:\Users\guohu\Desktop\xipi\pi\fg\S00' num2str(i) '\task_' num2str(j)];
    filename=('numpi.mat');
    save([path4,filename],"numpi");
    end
end
